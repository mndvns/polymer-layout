module.exports = '\n<!-- - vars = package.json-->\n<element name="polymer-layout" attributes="fullbleed">\n  <template></template><style type="text/css">@host {\n  * {\n    display: none;\n  }\n}\n</style>\n  <script>\n    Polymer.register(this, {\n          vertical: false,\n          ready: function() {\n            this.setAttribute(\'nolayout\', \'\');\n          },\n          inserted: function() {\n            this.asyncMethod(function() {\n              this.prepare();\n              this.layout();\n            });\n          },\n          prepare: function() {\n            var parent = this.parentNode.host || this.parentNode;\n            // may recalc\n            var cs = window.getComputedStyle(parent);\n            if (cs.position === \'static\') {\n              parent.style.position = \'relative\';\n            }\n            parent.style.overflow = \'hidden\';\n            // changes will cause another recalc at next validation step\n            var vertical;\n            this.parentNode.childNodes.forEach(function(c, i) {\n              if (c.nodeType === Node.ELEMENT_NODE && !c.hasAttribute(\'nolayout\')) {\n                stylize(c, {\n                  position: \'absolute\',\n                  boxSizing: \'border-box\',\n                  MozBoxSizing: \'border-box\',\n                });\n                // test for auto-vertical\n                if (vertical === undefined) {\n                  vertical = (c.offsetWidth == 0 && c.offsetHeight !== 0);\n                }\n              }\n            });\n            this.vertical = this.vertical || vertical;\n          },\n          layout: function() {\n            var parent = this.parentNode.host || this.parentNode;\n            var vertical = this.vertical;\n            var ww = 0, hh = 0, pre = [], fit, post = [];\n            var list = pre;\n            // gather element information (at most one recalc)\n            this.parentNode.childNodes.forEach(function(c, i) {\n              if (c.nodeType===Node.ELEMENT_NODE && !c.hasAttribute(\'nolayout\')) {\n                var info = {\n                  element: c,\n                  w: c.offsetWidth,\n                  h: c.offsetHeight\n                };\n                if (!c.hasAttribute(\'fit\')) {\n                  ww += c.offsetWidth;\n                  hh += c.offsetHeight;\n                  list.push(info);\n                } else {\n                  fit = c;\n                  list = post;\n                  ww = hh = 0;\n                }\n              }\n            });\n            // update layout styles (invalidate, no recalc)\n            var v = 0;\n            var mxp = 0, myp = 0;\n            pre.forEach(function(info) {\n              if (vertical) {\n                stylize(info.element, {\n                  top: v + \'px\', right: mxp, height: info.h + \'px\', left: mxp\n                });\n              } else {\n                stylize(info.element, {\n                  top: myp, width: info.w + \'px\', bottom: myp, left: v + \'px\'\n                });\n              }\n              v += vertical ? info.h : info.w;\n            });\n            if (fit) {\n              if (vertical) {\n                stylize(fit, {\n                  top: v + \'px\', right: mxp, bottom: hh + \'px\', left: mxp\n                });\n              } else {\n                stylize(fit, {\n                  top: myp, right: ww + \'px\', bottom: myp, left: v + \'px\'\n                });\n              }\n              v = vertical ? hh : ww;\n              post.forEach(function(info) {\n                v -= vertical ? info.h : info.w;\n                if (vertical) {\n                  stylize(info.element, {\n                    height: info.h + \'px\', right: mxp, bottom: v + \'px\', left: mxp\n                  });\n                } else {\n                  stylize(info.element, {\n                    top: myp, right: v + \'px\', bottom: myp, width: info.w + \'px\'\n                  });\n                }\n              });\n            }\n          }\n    });\n        function stylize(element, styles) {\n          var style = element.style;\n          Object.keys(styles).forEach(function(k){\n            style[k] = styles[k];  \n          });     \n        }\n        \n  </script>\n</element>';